arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(gf_cases=cases/lag(cases), gf_deaths=deaths/lag(deaths))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>%
replace_na(0) %>%
round(3)
COL[is.infinite(COL)] <- 1
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "gf_cases")
df <- formatGrowthFactors(df, "gf_deaths")
df <- df[!is.infinite(gf_cases),] # remove the rows when first case appeared for now
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('cases' = `count.x`, "deaths" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(cases = sum(cases), deaths=sum(deaths), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(gf_cases=cases/lag(cases), gf_deaths=deaths/lag(deaths))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>%
replace_na(0) %>%
round(3)
COL[is.infinite(COL)] <- 1
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "gf_cases")
df <- formatGrowthFactors(df, "gf_deaths")
# remove the rows when first case appeared for now
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('cases' = `count.x`, "deaths" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(cases = sum(cases), deaths=sum(deaths), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(cases_gf=cases/lag(cases), deaths_gf=deaths/lag(deaths))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "cases_gf")
df <- formatGrowthFactors(df, "deaths_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('cases' = `count.x`, "deaths" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(cases = sum(cases), deaths=sum(deaths), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=cases/lag(cases), death_gf=deaths/lag(deaths))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(cases = sum(cases), deaths=sum(deaths), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=cases/lag(cases), death_gf=deaths/lag(deaths))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
rlang::last_error()
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(cases = sum(cases), deaths=sum(deaths), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(cases), death_cum=cumsum(deaths))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=case/lag(case), death_gf=death/lag(death))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(case = sum(case), death=sum(death), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(case), death_cum=cumsum(death))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 1000)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=case/lag(case), death_gf=death/lag(death))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(case = sum(case), death=sum(death), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(case), death_cum=cumsum(death))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 100)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=case/lag(case), death_gf=death/lag(death))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
warning()
warnings()
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(case = sum(case), death=sum(death), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(case), death_cum=cumsum(death))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 10)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=case/lag(case), death_gf=death/lag(death))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
library(tidyverse)
library(dplyr)
library(lubridate)
data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
deathData <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
reformatData <- function(data) {
return(
data %>%
gather("date", "count",  names(data)[grepl("X", names(data))]) %>%
filter(iso2 == "US", Lat != "0", Long_ != "0") %>% #Only include US and with lat long values
#select(c(UID, FIPS, Admin2, Province_State ,Lat, Long_, date, count)) %>%
select(UID, Lat, Long_, date, count) %>% # Select required
rename('lat' = Lat, 'lon' = Long_) %>% # Rename for ease
mutate(date = str_replace_all(date, "X", "")) %>% # Fix date
mutate(date = as.Date(date, format = "%m.%d.%y")) %>% # Parse date
arrange(date) # sort by date
)
}
df <- reformatData(data)
death <- reformatData(deathData) %>% select(UID, count, date)
df <- df %>% left_join(death, by=c("UID", "date")) %>%
rename('case' = `count.x`, "death" = `count.y`)
## Group by week/day etc
df <- group_by(df, UID, date=cut(date, "1 day")) %>%
summarise(case = sum(case), death=sum(death), lat=first(lat), lon=first(lon))  %>%
arrange(UID, date)
# add cumsum
df <- mutate(group_by(df,UID), case_cum=cumsum(case), death_cum=cumsum(death))
### Areas with case_cumsum > 1000
filtered <- df %>%
group_by(UID) %>%
summarize(max = max(case_cum)) %>%
filter(max > 500)
df <- filter(df, UID %in% filtered$UID)
# Add growth factor
df <- df %>%
arrange(UID, date) %>%
mutate(case_gf=case/lag(case), death_gf=death/lag(death))
formatGrowthFactors <- function(df, colName) {
COL <- pull(df, colName)
COL <- COL %>% replace_na(0) %>% round(3) # Change N/A to 0, this is when it is 0 after 0
COL[is.infinite(COL)] <- 1 # Change infinite to 1, this when it goes up from 0 so percentge is undefined
df[[colName]] <- COL
return(df)
}
df <- formatGrowthFactors(df, "case_gf")
df <- formatGrowthFactors(df, "death_gf")
### After March
#df <- filter(df, date > "2020-03-01")
df <- arrange(df, date)
write_csv(df, 'geo_cleaned.csv')
#View(df)
totals <- group_by(df, date) %>% summarise(sum(case, death, case_cum, death_cum))
View(totals)
totals <- group_by(df, date) %>% summarise(case=sum, death=sum, case_cum=sum, death_cum=sum))
totals <- group_by(df, date) %>% summarise(case=sum(case), death=sum(death), case_cum=sum(case_cum), death_cum=sum(death_cum)))
totals <- group_by(df, date) %>% summarise(case=sum(case), death=sum(death), case_cum=sum(case_cum), death_cum=sum(death_cum))
write_csv(df, 'totals.csv')
write_csv(totals, 'totals.csv')
